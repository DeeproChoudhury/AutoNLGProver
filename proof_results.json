[
  {
    "problem_name": "imo_1959_p1",
    "run_index": 0,
    "success": false,
    "final_sketch": "(* formal statement copy from the input *)\ntheorem imo_1959_p1:\n  fixes n :: nat\n  shows \"gcd (21*n + 4) (14*n + 3) = 1\"\nproof -\n  (* apply the Euclidean algorithm *)\n  have \"gcd (21*n + 4) (14*n + 3) = gcd (14*n + 3) ((21*n + 4) mod (14*n + 3))\"\n  using euclidean_algorithm sledgehammer\n  (* show that (21*n + 4) mod (14*n + 3) = 7*n + 1 *)\n  then have \"gcd (21*n + 4) (14*n + 3) = gcd (14*n + 3) (7*n + 1)\"\n  sledgehammer\n  (* apply the Euclidean algorithm again *)\n  then have \"gcd (21*n + 4) (14*n + 3) = gcd (7*n + 1) ((14*n + 3) mod (7*n + 1))\"\n  using euclidean_algorithm sledgehammer\n  (* show that (14*n + 3) mod (7*n + 1) = 1 *)\n  then have \"gcd (21*n + 4) (14*n + 3) = gcd (7*n + 1) 1\"\n  sledgehammer\n  (* use the lemma gcd_1 to conclude that gcd (7*n + 1) 1 = 1 *)\n  then show ?thesis\n  using gcd_1 sledgehammer\nqed",
    "verified_lemmas": {
      "0": {
        "informal": "A lemma proving the Euclidean algorithm will be beneficial.",
        "formal": "lemma euclidean_algorithm:\n  fixes a b :: nat\n  shows \"gcd a b = gcd b (a mod b)\"\nproof -\n  have \"gcd a b = gcd b (a - b * (a div b))\"\n  sledgehammer\n  also have \"a - b * (a div b) = a mod b\"\n  sledgehammer\n  finally show ?thesis .\nqed"
      },
      "1": {
        "informal": "A lemma showing that the gcd of any number and 1 is 1.",
        "formal": "lemma gcd_1:\n  fixes a :: nat\n  shows \"gcd a 1 = 1\"\nproof -\n  have \"gcd a 1 = gcd 1 (a mod 1)\"\n  sledgehammer\n  also have \"a mod 1 = 0\"\n  sledgehammer\n  finally show ?thesis\n  sledgehammer\nqed"
      }
    }
  }
]