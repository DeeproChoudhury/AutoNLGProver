[
  {
    "problem_name": "aime_1983_p1",
    "run_index": 0,
    "success": false,
    "final_sketch": "(* formal statement copied from the input *)\ntheorem aime_1983_p1:\n  fixes x y z w :: nat\n  assumes ht : \"1 < x \\<and> 1 < y \\<and> 1 < z\"\n    and hw : \"0 \\<le> w\"\n    and h0 : \"ln w / ln x = 24\"\n    and h1 : \"ln w / ln y = 40\"\n    and h2 : \"ln w / ln (x * y * z) = 12\"\n  shows \"ln w / ln z = 60\"\nproof -\n  (* Step 1: Convert the logarithmic equations to exponential form. *)\n  have c0: \"x^24 = w\" using h0 sledgehammer\n  have c1: \"y^40 = w\" using h1 sledgehammer\n  have c2: \"(x*y*z)^12 = w\" using h2 sledgehammer\n\n  (* Step 2: Raise each equation to the power of 5, 3, and 10 respectively to make the exponents equal. *)\n  have c3: \"x^120 = w^5\" using c0 sledgehammer\n  have c4: \"y^120 = w^3\" using c1 sledgehammer\n  have c5: \"(x*y*z)^120 = w^10\" using c2 sledgehammer\n\n  (* Step 3: Substitute the values of $x^{120}$ and $y^{120}$ into the equation $(xyz)^{120} = w^{10}$. *)\n  have c6: \"w^5 * w^3 * z^120 = w^10\" using c3 c4 c5 sledgehammer\n\n  (* Step 4: Simplify the equation to isolate $z^{120}$. *)\n  have c7: \"z^120 = w^2\" using c6 sledgehammer\n\n  (* Step 5: Convert the equation back to logarithmic form. *)\n  have c8: \"ln z / ln w = 120 / 2\" using c7 sledgehammer\n  then show ?thesis using c8 sledgehammer\nqed",
    "verified_lemmas": {}
  },
  {
    "problem_name": "aime_1983_p1",
    "run_index": 1,
    "success": false,
    "final_sketch": "(* Include the helper lemma *)\nlemma exp_mult:\n  fixes a b c :: nat\n  shows \"(a * b) ^ c = a ^ c * b ^ c\"\n  sledgehammer\n\n(* formal statement copy from the input *)\ntheorem aime_1983_p1:\n  fixes x y z w :: nat\n  assumes ht : \"1 < x \\<and> 1 < y \\<and> 1 < z\"\n    and hw : \"0 \\<le> w\"\n    and h0 : \"ln w / ln x = 24\"\n    and h1 : \"ln w / ln y = 40\"\n    and h2 : \"ln w / ln (x * y * z) = 12\"\n  shows \"ln w / ln z = 60\"\nproof -\n  (* Step 1: Convert the logarithmic equations to exponential form. *)\n  have c0: \"w = x ^ 24\" using h0 sledgehammer\n  have c1: \"w = y ^ 40\" using h1 sledgehammer\n  have c2: \"w = (x * y * z) ^ 12\" using h2 sledgehammer\n\n  (* Step 2: Raise each equation to the power of 120 to make the exponents of $w$ in each equation comparable. *)\n  have c3: \"w ^ 120 = x ^ 2880\" using c0 sledgehammer\n  have c4: \"w ^ 120 = y ^ 4800\" using c1 sledgehammer\n  have c5: \"w ^ 120 = (x * y * z) ^ 144\" using c2 sledgehammer\n\n  (* Step 3: Substitute the expressions for $x^{120}$ and $y^{120}$ into the equation for $(xyz)^{120}$. *)\n  have c6: \"x ^ 2880 = y ^ 4800\" using c3 c4 sledgehammer\n  have c7: \"x ^ 2880 * z ^ 144 = y ^ 4800\" using c5 c6 sledgehammer\n\n  (* Step 4: Simplify the resulting equation to isolate $z^{120}$ and find its value in terms of $w$. *)\n  have c8: \"z ^ 144 = w ^ 120\" using c7 sledgehammer\n\n  (* Step 5: Convert the equation back to logarithmic form to find $\\log_z w$. *)\n  have \"ln w / ln z = 144 / 120\" using c8 sledgehammer\n  also have \"... = 60\" sledgehammer\n  finally show ?thesis sledgehammer\nqed",
    "verified_lemmas": {
      "1": {
        "informal": "A lemma showing the property of exponents $(a \\cdot b)^c = a^c \\cdot b^c$.",
        "formal": "lemma exp_mult:\n  fixes a b c :: nat\n  shows \"(a * b) ^ c = a ^ c * b ^ c\"\n  sledgehammer"
      }
    }
  },
  {
    "problem_name": "imo_1959_p1",
    "run_index": 0,
    "success": false,
    "final_sketch": "(* Include the helper lemmas *)\nlemma euclidean_algorithm:\n  fixes a b :: nat\n  shows \"gcd a b = gcd (a - b * (a div b)) b\"\n  sledgehammer\n\nlemma gcd_with_one:\n  fixes a :: nat\n  shows \"gcd a 1 = 1\"\n  sledgehammer\n\nlemma specific_euclidean_step:\n  fixes n :: nat\n  shows \"gcd (21*n + 4) (14*n + 3) = gcd (7*n + 1) (14*n + 3)\"\n  sledgehammer\n\nlemma final_euclidean_step:\n  fixes n :: nat\n  shows \"gcd (7*n + 1) (14*n + 3) = gcd (7*n + 1) 1\"\n  sledgehammer\n\n(* formal statement copy from the input *)\ntheorem imo_1959_p1:\n  fixes n :: nat\n  shows \"gcd (21*n + 4) (14*n + 3) = 1\"\nproof -\n  (* Step 3: Show that $(21n + 4, 14n + 3) = (7n + 1, 14n + 3)$. *)\n  have c0:\"gcd (21*n + 4) (14*n + 3) = gcd (7*n + 1) (14*n + 3)\"\n    using specific_euclidean_step sledgehammer\n\n  (* Step 4: Further simplify to $(7n + 1, 1)$. *)\n  have c1:\"gcd (7*n + 1) (14*n + 3) = gcd (7*n + 1) 1\"\n    using final_euclidean_step sledgehammer\n\n  (* Step 5: Conclude that the gcd is 1, implying that the fraction $\\frac{21n + 4}{14n + 3}$ is irreducible. *)\n  have \"gcd (7*n + 1) 1 = 1\"\n    using gcd_with_one sledgehammer\n  then have \"gcd (7*n + 1) (14*n + 3) = 1\"\n    using c1 sledgehammer\n  then have \"gcd (21*n + 4) (14*n + 3) = 1\"\n    using c0 sledgehammer\n  then show ?thesis\n    sledgehammer\nqed",
    "verified_lemmas": {
      "0": {
        "informal": "A lemma proving the Euclidean algorithm would be useful for steps 2-4.",
        "formal": "lemma euclidean_algorithm:\n  fixes a b :: nat\n  shows \"gcd a b = gcd (a - b * (a div b)) b\"\n  sledgehammer"
      },
      "1": {
        "informal": "A lemma showing that the gcd of any number and 1 is 1.",
        "formal": "lemma gcd_with_one:\n  fixes a :: nat\n  shows \"gcd a 1 = 1\"\n  sledgehammer"
      },
      "2": {
        "informal": "A lemma showing the specific simplification step in the Euclidean algorithm for this problem.",
        "formal": "lemma specific_euclidean_step:\n  fixes n :: nat\n  shows \"gcd (21*n + 4) (14*n + 3) = gcd (7*n + 1) (14*n + 3)\"\nproof -\n  (* Compute the remainder:\n   \\[\n   21n + 4 - k(14n + 3)\n   \\]\n   We need to find an integer \\( k \\) such that the result is less than \\( 14n + 3 \\). *)\n  have \"21*n + 4 = (14*n + 3) + (7*n + 1)\"\n    sledgehammer\n  (* Simplify using the Euclidean algorithm:\n   \\[\n   \\text{gcd}(21n + 4, 14n + 3) = \\text{gcd}(14n + 3, 7n + 1)\n   \\] *)\n  then have \"gcd (21*n + 4) (14*n + 3) = gcd (14*n + 3) (7*n + 1)\"\n    sledgehammer\n  (* Conclusion:\n   \\[\n   \\text{gcd}(14n + 3, 7n + 1) = \\text{gcd}(7n + 1, 14n + 3)\n   \\] *)\n  then have \"gcd (14*n + 3) (7*n + 1) = gcd (7*n + 1) (14*n + 3)\"\n    sledgehammer\n  then show ?thesis\n    sledgehammer\nqed"
      },
      "3": {
        "informal": "A lemma showing the final simplification step in the Euclidean algorithm for this problem.",
        "formal": "lemma final_euclidean_step:\n  fixes n :: nat\n  shows \"gcd (7*n + 1) (14*n + 3) = gcd (7*n + 1) 1\"\nproof -\n  (* We compute the remainder when \\(14n + 3\\) is divided by \\(7n + 1\\): *)\n  have \"14*n + 3 = 2 * (7*n + 1) + 1\"\n    sledgehammer\n  (* This step simplifies to: *)\n  then have \"14*n + 3 - 2 * (7*n + 1) = 1\"\n    sledgehammer\n  (* According to the properties of the gcd function, we have: *)\n  then have \"gcd (7*n + 1) (14*n + 3) = gcd (7*n + 1) 1\"\n    sledgehammer\n  (* Since \\(1\\) is a constant and the gcd of any number with \\(1\\) is \\(1\\), we conclude: *)\n  then show ?thesis\n    sledgehammer\nqed"
      }
    }
  },
  {
    "problem_name": "imo_1959_p1",
    "run_index": 1,
    "success": false,
    "final_sketch": "(* lemma 0. A lemma showing that the gcd of two numbers can be simplified using the Euclidean algorithm would be useful for step 1. *)\nlemma euclidean_algorithm_step:\n  fixes a b c :: nat\n  assumes \"b = a + c\"\n  shows \"gcd a b = gcd a c\"\n  using assms sledgehammer\n\n(* lemma 1. A lemma showing that the gcd of 1 and any number is 1 would be useful for step 2. *)\nlemma gcd_1:\n  fixes a :: nat\n  shows \"gcd a 1 = 1\"\n  sledgehammer\n\n(* formal statement copy from the input *)\ntheorem imo_1959_p1:\n  fixes n :: nat\n  shows \"gcd (21*n + 4) (14*n + 3) = 1\"\nproof -\n  (* Step 1: Apply the Euclidean algorithm to simplify the gcd expression. *)\n  have \"gcd (21*n + 4) (14*n + 3) = gcd (7*n + 1) (14*n + 3)\"\n    using euclidean_algorithm_step[of \"7*n\" \"21*n\" 4] sledgehammer\n  then have \"gcd (21*n + 4) (14*n + 3) = gcd (7*n + 1) (7*n - 1)\"\n    using euclidean_algorithm_step[of \"7*n\" \"14*n\" 3] sledgehammer\n\n  (* Step 2: Show that the gcd of the simplified terms is 1. *)\n  then have \"gcd (21*n + 4) (14*n + 3) = gcd (7*n + 1) (7*n - 1) = gcd (7*n + 1) 6\"\n    using euclidean_algorithm_step[of \"7*n\" \"7*n\" 2] sledgehammer\n  then have \"gcd (21*n + 4) (14*n + 3) = gcd 1 6\"\n    using euclidean_algorithm_step[of \"7*n\" 1 6] sledgehammer\n\n  (* Step 3: Conclude that the fraction is irreducible. *)\n  then show ?thesis\n    using gcd_1 sledgehammer\nqed",
    "verified_lemmas": {
      "0": {
        "informal": "A lemma showing that the gcd of two numbers can be simplified using the Euclidean algorithm would be useful for step 1.",
        "formal": "lemma euclidean_algorithm_step:\n  fixes a b c :: nat\n  assumes \"b = a + c\"\n  shows \"gcd a b = gcd a c\"\n  using assms sledgehammer"
      },
      "1": {
        "informal": "A lemma showing that the gcd of 1 and any number is 1 would be useful for step 2.",
        "formal": "lemma gcd_1:\n  fixes a :: nat\n  shows \"gcd a 1 = 1\"\n  sledgehammer"
      }
    }
  }
]