SPECIAL_SYMBOL = {
    "≥": "\<ge>",
    "≤": "\<le>",
    "≠": "\<noteq>",
    "∧": "\<and>",
    "∨": "\<or>",
    "¬": "\<not>",
    "⇒": "\<Rightarrow>",
    "⇔": "\<longleftrightarrow>",
    "→": "\<longrightarrow>",
    "∀": "\<forall>",
    "∃": "\<exists>",
    "∈": "\<in>",
    "⊆": "\<subseteq>",
    "∪": "\<union>",
    "∩": "\<inter>",
    "⊂": "\<subset>",
    "∅": "\<emptyset>",
    "∑": "\<sum>",
    "∫": "\<integral>",
    "≡": "\<equiv>",
    "⊢": "\<turnstile>",
    "⊨": "\<models>",
    "⊥": "\<bottom>",
    "⊤": "\<top>",
    "≜": "\<triangleq>",
    "≈": "\<approx>",
    "≅": "\<cong>",
    "⋀": "\<And>",
    "⋁": "\<Or>",
    "⋂": "\<Inter>",
    "⋃": "\<Union>",
    "⊗": "\<otimes>",
    "∗": "\<star>",
    "λ": "\<lambda>",
    "∞": "\<infinity>",
    "ℕ": "\<nat>",
    "ℤ": "\<int>",
    "ℚ": "\<rat>",
    "ℝ": "\<real>",
    "ℂ": "\<complex>",
    "↔": "\<leftrightarrow>",
    "‹": "\<open>",
    "›": "\<close>",
    "α": "\<alpha>",
    "β": "\<beta>",
    "γ": "\<gamma>",
}

def replace_special_symbols(code):
    for symbol, value in SPECIAL_SYMBOL.items():
        if symbol in code:
            code = code.replace(symbol, value)